/*
服务器和普通电脑的区别在于,服务器上安装了web服务器软件,例如: I、Apache 等。通过安装这些服务器软件,
就能把一台普通的电脑变成一台web服务器。
在Node.js中，我们不需要使用IIS、Apache 等这些第三方web服务器软件。因为我们可以基于Node.js提供的
http模块,通过几行简单的代码，就能轻松的手写-个服务器软件,从而对外提供web服务。

IP地址就是互联网上每台计算机的唯一地址， 因此IP地址具有唯一性。 如果把“个人电脑”比作"一台电话”，那么"IP地
址”就相当于“电话号码”，只有在知道对方IP地址的前提下，才能与对应的电脑之间进行数据通信。
IP地址的格式:通常用”点分十进制”表示成(a.b.c.d) 的形式，中，a,b,c,d 都是0~255之间的十进制整数。例如:用
紛十进表示的IP地址(192.168.1.1)
           注意
互联网中每台Web服务器，都有自己的IP地址，例如:大家可以在Windows的终端中运行    ping www.baidu.com
命令，即可查看到百度服务器的IP地址。  然后在浏览器输入复制的ip地址就可以访问
在开发期间，自己的电脑既是一台服务器,也是一个客户端，为了方便测试，可以在自己的浏览器中输入127.0.0.1 这个
IP地址,就能把自己的电脑当做-台服务器进行访问了。


域名和域名服务器
尽管IP地址能够唯一地标记网络上的计算机，但IP地址是一长串数字, 不直观，而且不便于记忆，于是人们又发明了另-套
字符型的地址方案,即所谓的         域名(Domain Name)地址。
IP地址和域名是一对应的关系, 这份对应关系存放在一种叫做域名服务器(DNS, Domain name server)的电脑中。使用者
只需通过好记的域名访问对应的服务器即可，对应的转换工作由域名服务器实现。因此，域名服务器就是提供IP地址和域名
之间的转换服务的服务器。
注意:
①单纯使用IP地址,互联网中的电脑也能够正常工作。但是有了域名的加持，能让互联网的世界变得更加方便。
②在开发测试期间， 127.0.0.1对应的域名是localhost, 它们都代表我们自己的这台电脑，在使用效果上没有任何区别。


端口号
计算机中的端口号，就好像是现实生活中的门牌号一样。通过门牌号,外卖小哥可以在整栋大楼众多的房间中，准确把外卖
送到你的手中。
同样的道理，在一台电脑中,可以运行成百上千个web服务。每个web服务都对应一个唯一的端口号。客户端发送过来的
网络请求，通过端口号，可以被准确地交给对应的web服务进行处理。
注意:
①每个端口号不能同时被多个web服务占用。
②在实际应用中, URL中的80(8080)端口可以被省略。
*/

//导入http模块
const http = require('http');
//创建web服务器的实例   http.createServer()方法
const server = http.createServer();

//为服务器的实例对象绑定request事件  
//  使用  .on()方法  为服务器绑定一个request事件
server.on('request', function (req, res) {
    //只要有客户端来请求我们自己的服务器，就会触发request事件,调用这后面的回调函数
    console.log("hello!!!!!!!");

    //req 请求对象 只要服务器接收到了客户端的请求，就会调用通过serve.on()为服务器进行绑定的request事件处理函数
    //如果想在事件处理函数中，访问与客户端相关的数据或属性，可以使用如下的方式:
    //    req是请求对象，它包含了与客户端相关的数据和属性，例如下面
    //     req.url 是客户端请求的URL地址
    //   req.method 是客户端的method 请求类型
    const str = `Your request url is ${req.url}, and request method is ${req.method} 邵昱赫`//ES6语法 `   `
    //注意后面有中文，如果不处理就是变成了乱码，所以需要手动设置内容的编码格式
    //所以为了解决中文乱码的问题，需要设置响应头  Content-Type的值为 text/html ;charset=utf-8
    res.setHeader('Content-Type','text/html;charset=utf-8')

    //res 响应对象 它包含了与服务器相关的属性和数据，例如
    //要发送到客户端的字符串  res.end()
    res.end(str);
})
//  启动服务器  .listen(端口号，回调函数)方法，即可启动web服务器
server.listen(8080, function () {
    console.log('服务器运行在http://127.0.0.1:8080');//端口为8080，可以省略，变为http://127.0.0.1 
})

//vscode   可以点击最上面的终端 ，然后点击新建终端，或者右键文件，在集成终端中打开
//比前几个测试起来更方便   crtl+c 停止终端     npx nodemon 06+tab  
